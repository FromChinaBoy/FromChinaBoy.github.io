<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="https://www.w3.org/2005/Atom">
	<channel>
		<title>Blog</title>
		<description>fromChinaBoy</description>
		<link>/</link>
		<atom:link href="/" rel="self" type="application/rss+xml" />
		
			<item>
				<title>gitlab出现502问题</title>
				<description>&lt;h3 id=&quot;问题概述&quot;&gt;问题概述&lt;/h3&gt;
&lt;p&gt;上周，公司内部服务器重启，自搭建的gitlab仓库返回502。在这里先说明gitlab的搭建情况，用了宝塔管理，已经有了
nginx，所以不用gitlab自带的nginx服务，修改过程如下。&lt;/p&gt;

&lt;p&gt;1、修改配置文件，禁用内嵌 nginx&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/gitlab/gitlab.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改一下配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 关闭nginx服务
nginx['enable'] = false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;应用修改的配置&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 重新加载配置
sudo gitlab-ctl reconfigure
# 重新启动
sudo gitlab-ctl restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2、设置宝塔的nginx代理转发,如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 添加upstream指向gitlab
upstream gitlab-workhorse {
  server unix:/var/opt/gitlab/gitlab-workhorse/socket  fail_timeout=0;
}


# 在server中添加
server
{

    ......

    location / {
            # serve static files from defined root folder;.
            # @gitlab-workhorse is a named location for the upstream fallback, see below
            try_files $uri $uri/index.html $uri.html @gitlab-workhorse;
    }

    location @gitlab-workhorse {
            # If you use https make sure you disable gzip compression 
            # to be safe against BREACH attack

            proxy_read_timeout 300; # Some requests take more than 30 seconds.
            proxy_connect_timeout 300; # Some requests take more than 30 seconds.
            proxy_redirect     off;

            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   Host              $http_host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Frame-Options   SAMEORIGIN;

            proxy_pass http://gitlab-workhorse;
    }

    location ~ ^/(assets)/  {
            root /opt/gitlab/embedded/service/gitlab-rails/public;
            # gzip_static on; # to serve pre-gzipped version
            expires max;
            add_header Cache-Control public;
    }

    .....
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后报出了502，查看nginx的error日志，提示权限问题。
&lt;img src=&quot;http://img.zzhpeng.cn/Fkn0XGjtnpSN-0bTrMNeFeWo3wxr&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;解决过程&quot;&gt;解决过程&lt;/h3&gt;
&lt;p&gt;看到/etc/gitlab/gitlab.rb文件有个说明，当不开启内部的nginx的时候，需要加一个外部的用户。这里的外部用户
即是指宝塔的nginx开启的用户www。&lt;/p&gt;

&lt;p&gt;1、查看nginx的开启用户
&lt;img src=&quot;http://img.zzhpeng.cn/FiqxjiPd1NGzUVLRyb9XmszwI9TE&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2、修改/etc/gitlab/gitlab.rb
&lt;img src=&quot;http://img.zzhpeng.cn/Fp5IQkW4PcGC4O_-kF_oelDWhQJF&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;应用修改的配置&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 重新加载配置
sudo gitlab-ctl reconfigure
# 重新启动
sudo gitlab-ctl restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;！！！但是，还是不行，还是502问题。你看，理论上没问题啊！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这里涉及到了socket文件通讯的问题，一旦建立连接就会一直连接，原权限之类的还是原来的。&lt;/p&gt;

&lt;p&gt;nginx代理流，文件socket服务转发&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upstream gitlab-workhorse {
  server unix:/var/opt/gitlab/gitlab-workhorse/socket  fail_timeout=0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以，需要重启nginx,让它重新加载conf配置文件，重新建立连接&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;额外&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如何查看系统组情况和修改&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /etc/group
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Sun, 22 Sep 2019 00:00:00 +0800</pubDate>
				<link>/linux-user-group-permission.html</link>
				<guid isPermaLink="true">/linux-user-group-permission.html</guid>
			</item>
		
			<item>
				<title>jenkins启动一段时间后掉线</title>
				<description>&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;和gitlab使用的端口8080冲突，修改为了8088。然后每次jenkins启动过一段时间后会自动的down服务，
启动命令是service jenkins start。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;使用lsof -i:8080查看端口使用情况：
&lt;img src=&quot;http://img.zzhpeng.cn/FhgyPfOl3dr5UBcyGy0iMjavJ_3c&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;解决路程&quot;&gt;解决路程&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;尝试用另外一种方法启动,但还是使用旧的端口问题。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.zzhpeng.cn/Fiy7cWxbK29pDZZdUnqaosW5BDfC&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;搜索了下，找到了可以直接在启动后面加参数，改使用端口。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -jar jenkins.war --ajp13Port=-1 --httpPort=8088
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;挂在后台&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup java -jar jenkins.war --ajp13Port=-1 --httpPort=8088 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;再次出现问题&quot;&gt;再次出现问题&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;两种启动的数据文件不是用同一个的，用挂在后台的是新的数据库，需要重新注册admin，重新配置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决~~待。。。。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1、&lt;a href=&quot;https://blog.csdn.net/panruifang/article/details/14223323&quot;&gt;Jenkins 安装Address already in use问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 18 Sep 2019 00:00:00 +0800</pubDate>
				<link>/jenkins-auto-down.html</link>
				<guid isPermaLink="true">/jenkins-auto-down.html</guid>
			</item>
		
			<item>
				<title>elasticsearch业务问题</title>
				<description>&lt;h2 id=&quot;场景&quot;&gt;场景&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;要搜索的内容&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;P92325 iphone 7s plus 4G 黑色 美版 无锁
P92324 iphone 7 128g 金色 有锁 通用版
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;以为客户那边要求是，想的很简单&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;1、iphone7splus  搜索-&amp;gt;P92325 iphone 7s plus 4G 黑色 美版 无锁&lt;/li&gt;
  &lt;li&gt;2、iphone 7s plus  搜索-&amp;gt;P92325 iphone 7s plus 4G 黑色 美版 无锁&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;实际输入情况,五花八门，还有这些情况&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;1、iphone7splus  搜索-&amp;gt;P92325 iphone 7s plus 4G 黑色 美版 无锁&lt;/li&gt;
  &lt;li&gt;2、iphone 7s plus   搜索-&amp;gt;P92325 iphone 7s plus 4G 黑色 美版 无锁&lt;/li&gt;
  &lt;li&gt;3、iphone7sp 美版   搜索-&amp;gt;P92325 iphone 7s plus 4G 黑色 美版 无锁&lt;/li&gt;
  &lt;li&gt;4、iphone7 128g 美版   搜索-&amp;gt;P92324 iphone 7 128g 金色 有锁 通用版&lt;/li&gt;
  &lt;li&gt;5、iphone7s plus 美版   搜索-&amp;gt;iphone 7s plus 4G 黑色 美版 无锁&lt;/li&gt;
  &lt;li&gt;。。。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;解决路程&quot;&gt;解决路程&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;错误解决方案，将搜索内容去掉空格，然后DOC的文章分析用IK分词器ik_max_word，
搜索用ik_smart,然后将搜索的词也去掉空格。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1创建索引&quot;&gt;1、创建索引&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPUT http://localhost:9200/model
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2设置索引属性map&quot;&gt;2、设置索引属性map&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPOST http://localhost:9200/model/_mapping -H 'Content-Type:application/json' -d'
{
        &quot;properties&quot;: {
            &quot;name&quot;: {
                &quot;type&quot;: &quot;text&quot;,
                &quot;analyzer&quot;: &quot;ik_max_word&quot;,
                &quot;search_analyzer&quot;: &quot;ik_smart&quot;
            }
        }

}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3写入doc数据&quot;&gt;3、写入doc数据&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPOST http://localhost:9200/model/_create/1 -H 'Content-Type:application/json' -d'
{&quot;content&quot;:&quot;P92325 iphone7splus4G黑色美版无锁&quot;}
'
curl -XPOST http://localhost:9200/model/_create/2 -H 'Content-Type:application/json' -d'
{&quot;content&quot;:&quot;P92324 iphone7128g金色有锁通用版&quot;}
'

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;4查看doc状态&quot;&gt;4、查看doc状态&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -X GET &quot;http://localhost:9200/_cat/indices?v&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5搜索数据&quot;&gt;5、搜索数据&lt;/h3&gt;

&lt;p&gt;iphone7splus 或 iphone 7s plus 查找搜索出 P92325 iphone 7s plus 4G 黑色 美版 无锁&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPOST http://localhost:9200/model/_search  -H 'Content-Type:application/json' -d'
{
    &quot;size&quot; : 100,
    &quot;query&quot; : { &quot;match&quot; : { &quot;content&quot; : &quot;iphone7splus&quot; }}
  
}
'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;结果，啥都没：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
	&quot;took&quot;: 249,
	&quot;timed_out&quot;: false,
	&quot;_shards&quot;: {
		&quot;total&quot;: 1,
		&quot;successful&quot;: 1,
		&quot;skipped&quot;: 0,
		&quot;failed&quot;: 0
	},
	&quot;hits&quot;: {
		&quot;total&quot;: {
			&quot;value&quot;: 0,
			&quot;relation&quot;: &quot;eq&quot;
		},
		&quot;max_score&quot;: null,
		&quot;hits&quot;: []
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;为什么搜不出（一），因为P92325 iphone7splus4G黑色美版无锁 的文章分析不会出现iphone7splus。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;搜索词ik_smart分析&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XGET &quot;http://localhost:9200/model/_analyze&quot; -H 'Content-Type: application/json' -d'
{
   &quot;text&quot;:&quot;iphone7splus&quot;,&quot;tokenizer&quot;: &quot;ik_smart&quot;
}'

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;结果出现&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
	&quot;tokens&quot;: [{
		&quot;token&quot;: &quot;iphone7splus&quot;,
		&quot;start_offset&quot;: 0,
		&quot;end_offset&quot;: 12,
		&quot;type&quot;: &quot;LETTER&quot;,
		&quot;position&quot;: 0
	}]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查找文ik_max_word分析&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XGET &quot;http://localhost:9200/model/_analyze&quot; -H 'Content-Type: application/json' -d'
{
   &quot;text&quot;:&quot;iphone7splus4G黑色美版无锁&quot;,&quot;tokenizer&quot;: &quot;ik_max_word&quot;
}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;结果，不会出现iphone7splus&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
{
    &quot;tokens&quot;: [
        {
            &quot;token&quot;: &quot;iphone7splus4g&quot;,
            &quot;start_offset&quot;: 0,
            &quot;end_offset&quot;: 14,
            &quot;type&quot;: &quot;LETTER&quot;,
            &quot;position&quot;: 0
        },
        {
            &quot;token&quot;: &quot;iphone&quot;,
            &quot;start_offset&quot;: 0,
            &quot;end_offset&quot;: 6,
            &quot;type&quot;: &quot;ENGLISH&quot;,
            &quot;position&quot;: 1
        },
        {
            &quot;token&quot;: &quot;7&quot;,
            &quot;start_offset&quot;: 6,
            &quot;end_offset&quot;: 7,
            &quot;type&quot;: &quot;ARABIC&quot;,
            &quot;position&quot;: 2
        },
        {
            &quot;token&quot;: &quot;splus&quot;,
            &quot;start_offset&quot;: 7,
            &quot;end_offset&quot;: 12,
            &quot;type&quot;: &quot;ENGLISH&quot;,
            &quot;position&quot;: 3
        },
        {
            &quot;token&quot;: &quot;4&quot;,
            &quot;start_offset&quot;: 12,
            &quot;end_offset&quot;: 13,
            &quot;type&quot;: &quot;ARABIC&quot;,
            &quot;position&quot;: 4
        },
        {
            &quot;token&quot;: &quot;g&quot;,
            &quot;start_offset&quot;: 13,
            &quot;end_offset&quot;: 14,
            &quot;type&quot;: &quot;ENGLISH&quot;,
            &quot;position&quot;: 5
        },
        {
            &quot;token&quot;: &quot;黑色&quot;,
            &quot;start_offset&quot;: 14,
            &quot;end_offset&quot;: 16,
            &quot;type&quot;: &quot;CN_WORD&quot;,
            &quot;position&quot;: 6
        },
        {
            &quot;token&quot;: &quot;美版&quot;,
            &quot;start_offset&quot;: 16,
            &quot;end_offset&quot;: 18,
            &quot;type&quot;: &quot;CN_WORD&quot;,
            &quot;position&quot;: 7
        },
        {
            &quot;token&quot;: &quot;无&quot;,
            &quot;start_offset&quot;: 18,
            &quot;end_offset&quot;: 19,
            &quot;type&quot;: &quot;CN_CHAR&quot;,
            &quot;position&quot;: 8
        },
        {
            &quot;token&quot;: &quot;锁&quot;,
            &quot;start_offset&quot;: 19,
            &quot;end_offset&quot;: 20,
            &quot;type&quot;: &quot;CN_CHAR&quot;,
            &quot;position&quot;: 9
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所以说，去掉空格方案是不行的，那就不去掉咯&lt;/p&gt;

&lt;p&gt;分析语句&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XGET &quot;http://localhost:9200/model/_analyze&quot; -H 'Content-Type: application/json' -d'
{
   &quot;text&quot;:&quot;iphone 7s plus 4G 黑色 美版 无锁&quot;,&quot;tokenizer&quot;: &quot;ik_max_word&quot;
}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;结果，还是没有iphone7splus组合，那么搜索哪里也不去掉空格吧。这样就可以搜索到了。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;tokens&quot;: [
        {
            &quot;token&quot;: &quot;iphone&quot;,
            &quot;start_offset&quot;: 0,
            &quot;end_offset&quot;: 6,
            &quot;type&quot;: &quot;ENGLISH&quot;,
            &quot;position&quot;: 0
        },
        {
            &quot;token&quot;: &quot;7s&quot;,
            &quot;start_offset&quot;: 7,
            &quot;end_offset&quot;: 9,
            &quot;type&quot;: &quot;LETTER&quot;,
            &quot;position&quot;: 1
        },
        {
            &quot;token&quot;: &quot;7&quot;,
            &quot;start_offset&quot;: 7,
            &quot;end_offset&quot;: 8,
            &quot;type&quot;: &quot;ARABIC&quot;,
            &quot;position&quot;: 2
        },
        {
            &quot;token&quot;: &quot;s&quot;,
            &quot;start_offset&quot;: 8,
            &quot;end_offset&quot;: 9,
            &quot;type&quot;: &quot;ENGLISH&quot;,
            &quot;position&quot;: 3
        },
        {
            &quot;token&quot;: &quot;plus&quot;,
            &quot;start_offset&quot;: 10,
            &quot;end_offset&quot;: 14,
            &quot;type&quot;: &quot;ENGLISH&quot;,
            &quot;position&quot;: 4
        },
        {
            &quot;token&quot;: &quot;4g&quot;,
            &quot;start_offset&quot;: 15,
            &quot;end_offset&quot;: 17,
            &quot;type&quot;: &quot;LETTER&quot;,
            &quot;position&quot;: 5
        },
        {
            &quot;token&quot;: &quot;4&quot;,
            &quot;start_offset&quot;: 15,
            &quot;end_offset&quot;: 16,
            &quot;type&quot;: &quot;ARABIC&quot;,
            &quot;position&quot;: 6
        },
        {
            &quot;token&quot;: &quot;g&quot;,
            &quot;start_offset&quot;: 16,
            &quot;end_offset&quot;: 17,
            &quot;type&quot;: &quot;ENGLISH&quot;,
            &quot;position&quot;: 7
        },
        {
            &quot;token&quot;: &quot;黑色&quot;,
            &quot;start_offset&quot;: 18,
            &quot;end_offset&quot;: 20,
            &quot;type&quot;: &quot;CN_WORD&quot;,
            &quot;position&quot;: 8
        },
        {
            &quot;token&quot;: &quot;美版&quot;,
            &quot;start_offset&quot;: 21,
            &quot;end_offset&quot;: 23,
            &quot;type&quot;: &quot;CN_WORD&quot;,
            &quot;position&quot;: 9
        },
        {
            &quot;token&quot;: &quot;无&quot;,
            &quot;start_offset&quot;: 24,
            &quot;end_offset&quot;: 25,
            &quot;type&quot;: &quot;CN_CHAR&quot;,
            &quot;position&quot;: 10
        },
        {
            &quot;token&quot;: &quot;锁&quot;,
            &quot;start_offset&quot;: 25,
            &quot;end_offset&quot;: 26,
            &quot;type&quot;: &quot;CN_CHAR&quot;,
            &quot;position&quot;: 11
        }
    ]
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;但是问题是，这只是解决了我的简单设想客户是这么简单的输入搜索。但是实际却不是，复杂的多。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;解决方案是将搜索分析都改为ik_max_word，这样搜索词和文章的颗粒度都分的很细。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPOST http://localhost:9200/model/_mapping -H 'Content-Type:application/json' -d'
{
        &quot;properties&quot;: {
            &quot;name&quot;: {
                &quot;type&quot;: &quot;text&quot;,
                &quot;analyzer&quot;: &quot;ik_max_word&quot;,
                &quot;search_analyzer&quot;: &quot;ik_max_word&quot;
            }
        }

}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;注意的是，已经写入doc数据是不能修改的哦！&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;后记&quot;&gt;后记&lt;/h2&gt;
&lt;p&gt;1、去掉空格这种方案是听老大说的，太过信任和自己的懒惰，没实际去测试，导致进坑多时。&lt;/p&gt;

&lt;p&gt;2、探究技术要优先多看官方手册，其他来源资料只会让自己乱上加乱。&lt;/p&gt;

&lt;p&gt;3、功能流程要测一遍，很重要，处处都可能留下bug。错了之后数据乱，就更难调了。&lt;/p&gt;

&lt;p&gt;4、实际业务场景要多了解，多询问一线人员。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1、&lt;a href=&quot;https://github.com/medcl/elasticsearch-analysis-ik&quot;&gt;GitHub - medcl/elasticsearch-analysis-ik: The IK Analysis plugin integrates Lucene IK analyzer into elasticsearch, support customized dictionary.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Thu, 12 Sep 2019 00:00:00 +0800</pubDate>
				<link>/elasticsearch-actual_problem.html</link>
				<guid isPermaLink="true">/elasticsearch-actual_problem.html</guid>
			</item>
		
			<item>
				<title>云服务器磁盘扩容</title>
				<description>&lt;h1 id=&quot;操作前记得保存数据镜像&quot;&gt;操作前记得保存数据，镜像&lt;/h1&gt;
&lt;p&gt;数据丢失，概不负责！！&lt;/p&gt;

&lt;h1 id=&quot;数据盘扩容&quot;&gt;数据盘扩容&lt;/h1&gt;
&lt;h2 id=&quot;查看磁盘情况&quot;&gt;查看磁盘情况&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;查看已分区磁盘情况&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;df -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;查看磁盘情况&lt;/p&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo fdisk -lu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;格式化&quot;&gt;格式化&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkfs.ext3 /dev/vdb5  //扩展分区，然后分逻辑分区
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;挂载&quot;&gt;挂载&lt;/h2&gt;
&lt;p&gt;创建目录&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;挂载&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mount /dev/vdb5 /data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;系统盘扩容&quot;&gt;系统盘扩容&lt;/h1&gt;

&lt;h2 id=&quot;阿里云扩容&quot;&gt;阿里云扩容&lt;/h2&gt;
&lt;p&gt;阿里云可以直接加大当前磁盘容量，然后用工具直接命令扩容，很容易。详细查看下面url
https://help.aliyun.com/document_detail/111738.html?spm=a2c4g.11186623.4.1.74dc7f67KyKnUd#section-gxq-3tw-dhb&lt;/p&gt;

&lt;h2 id=&quot;腾讯云&quot;&gt;腾讯云&lt;/h2&gt;

&lt;p&gt;重装系统扩容
&lt;img src=&quot;http://img.zzhpeng.cn/FtGTBTeftcin55OCyU8g-J2p_Q4J&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;内容地址：https://cloud.tencent.com/document/product/362/32539&lt;/p&gt;

&lt;h1 id=&quot;知其然&quot;&gt;知其然&lt;/h1&gt;
&lt;p&gt;fdisk [选项] –l &lt;disk&gt;  列出所有分区表&lt;/disk&gt;&lt;/p&gt;

&lt;p&gt;(1).选项&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-b &amp;lt;size&amp;gt;  指定扇区大小（512，1024，2048或4096 B）
-c  关闭DOS兼容模式
-u &amp;lt;size&amp;gt;  以扇区编号取代柱面编号来表示每个分区的起始地址，一般与-l选项联合使用
-C &amp;lt;number&amp;gt;  指定柱面编号
-H &amp;lt;number&amp;gt;  指定磁头编号
-S &amp;lt;number&amp;gt;  指定磁道扇区编号
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;1、&lt;a href=&quot;https://www.cnblogs.com/diantong/p/8820779.html&quot;&gt;Linux命令之fdisk - 苦逼运维 - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Tue, 10 Sep 2019 00:00:00 +0800</pubDate>
				<link>/disk-extend.html</link>
				<guid isPermaLink="true">/disk-extend.html</guid>
			</item>
		
			<item>
				<title>elasticsearch生产部署</title>
				<description>&lt;h1 id=&quot;ubuntu-系统下直接安装&quot;&gt;Ubuntu 系统下直接安装&lt;/h1&gt;
&lt;h2 id=&quot;1安装opensdk&quot;&gt;1、安装OpenSdk&lt;/h2&gt;
&lt;p&gt;sudo apt-get install openjdk-8-jdk&lt;/p&gt;

&lt;p&gt;配置Java环境变量
sudo vim /etc/profile
在profile末尾添加以下内容:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;添加后保存并退出，用java -version查看是否配置成功&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openjdk version &quot;1.8.0_191&quot;
OpenJDK Runtime Environment (build 1.8.0_191-8u191-b12-2ubuntu0.18.04.1-b12)
OpenJDK 64-Bit Server VM (build 25.191-b12, mixed mode)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2安装elasticsearch&quot;&gt;2、安装Elasticsearch&lt;/h2&gt;

&lt;p&gt;选择相应版本，大小200多M，有点大，源不好，下载会有点慢，请耐性等待！！&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.3.1-linux-x86_64.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;解压&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -zxvf elasticsearch-7.3.1-linux-x86_64.tar.gz
cd elasticsearch-7.3.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3安装elasticsearch-ik分词&quot;&gt;3、安装elasticsearch-ik分词&lt;/h2&gt;

&lt;p&gt;源不好，下载会有点慢，请耐性等待！！&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.3.1/elasticsearch-analysis-ik-7.3.1.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下载完成后，记得选择Y,不然不会安装&lt;/p&gt;

&lt;h2 id=&quot;4改配置-elasticsearchbinelasticsearchyml&quot;&gt;4、改配置 /elasticsearch/bin/elasticsearch.yml&lt;/h2&gt;

&lt;h3 id=&quot;41切换root账户改vmmax_map_count&quot;&gt;4.1、切换root账户改vm.max_map_count&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;报错信息&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ERROR: bootstrap checks failed max virtual memory areas vm.max_map_count [65530] is
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;解决，切换到root用户修改配置sysctl.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;vi /etc/sysctl.conf&lt;/p&gt;

&lt;p&gt;加参数&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vm.max_map_count=655360
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使生效&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sysctl -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;42更改内存占用&quot;&gt;4.2、更改内存占用&lt;/h3&gt;

&lt;p&gt;默认1G，修改为实际占用。
vim ./config/jvm.options&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-Xms512m
-Xmx512m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;43内存不锁&quot;&gt;4.3、内存不锁&lt;/h3&gt;

&lt;p&gt;vim ./config/elasticsearch.yml&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bootstrap.memory_lock: false //原来是true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5启动&quot;&gt;5、启动&lt;/h2&gt;
&lt;p&gt;启动命令&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-$xslt&quot;&gt;./bin/elasticsearchg
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;docker-安装&quot;&gt;Docker 安装&lt;/h1&gt;

&lt;p&gt;待~&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1、&lt;a href=&quot;https://cnblogs.com/xiaojianfeng/p/9435507.html&quot;&gt;Elasticsearch和Head插件安装 - v-imok - 博客园&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2、&lt;a href=&quot;https://elasticsearch.cn/question/4136&quot;&gt;请教elasticsearch出现unassigned shards根本原因 - Elastic 中文社区&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3、&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/6.2/cluster-allocation-explain.html&quot;&gt;官方index检测&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4、&lt;a href=&quot;https://discuss.elastic.co/t/cluster-yellow-reason-shards-started-kibana-0/93034&quot;&gt;状态为yellow的原因&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5、&lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/targz.html&quot;&gt;kibana&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Mon, 09 Sep 2019 00:00:00 +0800</pubDate>
				<link>/elasticsearch-production.html</link>
				<guid isPermaLink="true">/elasticsearch-production.html</guid>
			</item>
		
			<item>
				<title>PHP缓冲区</title>
				<description>&lt;h2 id=&quot;事由&quot;&gt;事由&lt;/h2&gt;
&lt;p&gt;上一篇文章中，写了关于nginx和php-fpm组合 请求超时的解决方案,
设置了保持长时间请求不断。但是，又遇到个问题就是缓冲区，需要边保持请求连接边打印东西
到浏览器。&lt;/p&gt;

&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;p&gt;涉及php.ini属性概念与修改
output_buffering
implicit_flush
output_handler&lt;/p&gt;

&lt;h3 id=&quot;cli模式的缓冲区强制不开启&quot;&gt;cli模式的缓冲区强制不开启&lt;/h3&gt;
&lt;p&gt;output_buffering 为off
implicit_flush 为on&lt;/p&gt;

&lt;h3 id=&quot;php-fpm-才可以用phpini的设置&quot;&gt;php-fpm 才可以用php.ini的设置&lt;/h3&gt;

&lt;p&gt;默认设置是 output_buffering=4096，implicit_flush 为off,所以要缓冲区输出的话就要手动填充或者改配置，然后flush出来。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    for ($i = 0; $i&amp;lt; 10;$i++){
        ob_start();
        //查看执行情况
        echo '完成:' .$i . '/100' . PHP_EOL;
        echo str_repeat(&quot; &quot;, 1024 * 2);//人为将缓冲数据扩充到2k

        ob_end_clean();
        sleep(1);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;p&gt;1、&lt;a href=&quot;https://www.cnblogs.com/devcjq/articles/6072945.html&quot;&gt;关于PHP 刷新缓冲区操作(边执行边输出)简单分析&lt;/a&gt;
2、&lt;a href=&quot;https://www.cnblogs.com/raobenjun/p/8086051.html&quot;&gt;深入理解php的输出缓冲区(output buffer) - EzrealR - 博客园&lt;/a&gt;
3、&lt;a href=&quot;https://www.cnblogs.com/raobenjun/p/8085957.html&quot;&gt;php缓冲区 - EzrealR - 博客园&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Sat, 07 Sep 2019 00:00:00 +0800</pubDate>
				<link>/php-ob-flush.html</link>
				<guid isPermaLink="true">/php-ob-flush.html</guid>
			</item>
		
			<item>
				<title>web服务超时处理</title>
				<description>&lt;h2 id=&quot;事由&quot;&gt;事由&lt;/h2&gt;
&lt;p&gt;执行285675条mysql数据操作的时候，页面出现nginx异常An error occurred.报错。查看日志，详情如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2019/09/06 14:32:46 [error] 9#9: *7 upstream timed out (110: Connection timed out) while 

reading response header from upstream, client: 172.26.0.1, server: localhost, request: 

&quot;GET /index/elasticsearch/setDocument HTTP/1.1&quot;, upstream: &quot;fastcgi://172.26.0.3:9000&quot;, 

host: &quot;192.168.199.182:8002&quot;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;p&gt;本地开发环境，由于要执行这些数据的处理，加长超时时间处理，所以:&lt;/p&gt;

&lt;p&gt;nginx.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
http {
    keepalive_timeout  600; //10分钟
    client_header_timeout 600;
    client_body_timeout 600;
 
    server{
         proxy_read_timeout 600;
 
         location ~ \.php$ {
                  fastcgi_connect_timeout 600s;
                  fastcgi_send_timeout 600s;
                  fastcgi_read_timeout 600s;
                  ...
         }
    }
 
}


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;php对应的方法下加上 set_time_limit(0);&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
/**
 * 数据写入
 * @author: zzhpeng
 * Date: 2019/9/5
 * @return \think\Response
 */
public function setDocument(){
    set_time_limit(0);
    $count = DepotGoodsDetail::count();

    $pageSize = 500;
    for ($i = 0;$i&amp;lt; ceil($count / $pageSize); $i++){
        $offset = $pageSize * $i;
        $data = DepotGoodsDetail::limit($offset,$pageSize)-&amp;gt;column('id,goods_sn,goods_name,skus_json,classify_type_id,store_id');
        $documents = [];
        foreach ($data as $id =&amp;gt; $vo) {
            $sku = implode(&quot; &quot;, json_decode($vo['skus_json'], true));
            $documents[] = [
                'goods_detail_id' =&amp;gt; $vo['id'],
                'name' =&amp;gt; $vo['goods_sn'] . ' ' . $vo['goods_name'] . ' ' . $sku,
                'search_name' =&amp;gt; $vo['goods_sn'] . ' ' . trim($vo['goods_name'] . $sku),
                'classify_type_id' =&amp;gt; $vo['classify_type_id'],
                'store_id' =&amp;gt; $vo['store_id'],
            ];
        }
        ElasticsearchLogic::setDocoments('oh_depot_goods_name_list',$documents);
        unset($documents);
        sleep(2);
    }

    return $this-&amp;gt;successResponse();
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;p&gt;1、&lt;a href=&quot;https://blog.csdn.net/daily886/article/details/92558512&quot;&gt;nginx 配置接口超时时间 10分钟 - daily886的博客 - CSDN博客&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Fri, 06 Sep 2019 00:00:00 +0800</pubDate>
				<link>/timed-out.html</link>
				<guid isPermaLink="true">/timed-out.html</guid>
			</item>
		
			<item>
				<title>elasticsearch学习</title>
				<description>&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;下载相应版本 https://www.elastic.co/cn/downloads/elasticsearch&lt;/p&gt;

&lt;h2 id=&quot;配置&quot;&gt;配置&lt;/h2&gt;
&lt;p&gt;1、修改配置，其他主机可以访问，单节点部署&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim config/elasticsearch.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://img.zzhpeng.cn/FqYRhHL4hv5NrrJMumI_wtDGIng1&quot; alt=&quot;FhoCc45P5ISRy7oFsr5ZQLdhK-3P&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其他配置：https://www.cnblogs.com/zlslch/p/6419948.html&lt;/p&gt;

&lt;p&gt;2、修改占用内存大小&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /config/jvm.options
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;个人开发小项目，可以把参数改小些&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-Xms512m
-Xmx512m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3、启动报错&lt;/p&gt;

&lt;p&gt;执行启动命令&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.bin/elasticsearch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;然后报错&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[1]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;提示需要修改虚拟内存，切换到root用户，执行命令：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sysctl -w vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上述方法修改之后，如果重启虚拟机将失效，所以：解决办法：在 /etc/sysctl.conf文件最后添加一行
vm.max_map_count=262144
即可永久修改&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;其他配置&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;属性名&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;cluster.name&lt;/td&gt;
      &lt;td&gt;配置elasticsearch的集群名称，默认是elasticsearch。建议修改成一个有意义的名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;node.name&lt;/td&gt;
      &lt;td&gt;节点名，es会默认随机指定一个名字，建议指定一个有意义的名称，方便管理&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;path.conf&lt;/td&gt;
      &lt;td&gt;设置配置文件的存储路径，tar或zip包安装默认在es根目录下的config文件夹，rpm安装默认在/etc/ elasticsearch&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;path.data&lt;/td&gt;
      &lt;td&gt;设置索引数据的存储路径，默认是es根目录下的data文件夹，可以设置多个存储路径，用逗号隔开&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;path.logs&lt;/td&gt;
      &lt;td&gt;设置日志文件的存储路径，默认是es根目录下的logs文件夹&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;path.plugins&lt;/td&gt;
      &lt;td&gt;设置插件的存放路径，默认是es根目录下的plugins文件夹&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bootstrap.memory_lock&lt;/td&gt;
      &lt;td&gt;设置为true可以锁住ES使用的内存，避免内存进行swap&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;network.host&lt;/td&gt;
      &lt;td&gt;设置bind_host和publish_host，设置为0.0.0.0允许外网访问&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;http.port&lt;/td&gt;
      &lt;td&gt;设置对外服务的http端口，默认为9200。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;transport.tcp.port&lt;/td&gt;
      &lt;td&gt;集群结点之间通信端口&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;discovery.zen.ping.timeout&lt;/td&gt;
      &lt;td&gt;设置ES自动发现节点连接超时的时间，默认为3秒，如果网络延迟高可设置大些&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;discovery.zen.minimum_master_nodes&lt;/td&gt;
      &lt;td&gt;主结点数量的最少值 ,此值的公式为：(master_eligible_nodes / 2) + 1 ，比如：有3个符合要求的主结点，那么这里要设置为2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;lk分词插件&quot;&gt;lk分词插件&lt;/h2&gt;
&lt;p&gt;中文分词器，同lucene一样，在使用中文全文检索前，需要集成IK分词器。找到相应的发行版本安装。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.3.1/elasticsearch-analysis-ik-7.3.1.zip

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果报错，多数是网络问题，文件没下载完整。&lt;/p&gt;

&lt;h2 id=&quot;kibana图形管理安装&quot;&gt;Kibana图形管理安装&lt;/h2&gt;
&lt;p&gt;待。。。&lt;/p&gt;

&lt;h2 id=&quot;php实战&quot;&gt;php实战&lt;/h2&gt;

&lt;h3 id=&quot;基本概念&quot;&gt;基本概念&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;概念&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;索引库（indices)&lt;/td&gt;
      &lt;td&gt;indices是index的复数，代表许多的索引，&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;文档（document）&lt;/td&gt;
      &lt;td&gt;存入索引库原始的数据。比如每一条商品信息，就是一个文档&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;字段（field）&lt;/td&gt;
      &lt;td&gt;文档中的属性&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;映射配置（mappings）&lt;/td&gt;
      &lt;td&gt;字段的数据类型、属性、是否索引、是否存储等特性&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;代码实现&quot;&gt;代码实现&lt;/h3&gt;
&lt;p&gt;这里用官方组出的客户端轮子https://github.com/elastic/elasticsearch-php.git&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;生成索引（index)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 protected static $client = null;

/**
 * @return mixed
 */
 public static function getClient()
 {
    if(!isset(self::$client)){
        $hosts = [
            env('ELASTICSEARCH.HOST','192.168.199.254:9200'),     // IP + Port
        ];
        self::$client = ClientBuilder::create()           // Instantiate a new ClientBuilder
        -&amp;gt;setHosts($hosts)      // Set the hosts
        -&amp;gt;build();              // Build the client object
    }
    return self::$client;
 }
 
/**
 * 加属性
 * @author: zzhpeng
 * Date: 2019/9/5
 * @param array $param
 */
public static function addCommonParams(array &amp;amp;$param){
    // 统一添加404报错忽略
    $param = array_merge($param,['client' =&amp;gt; [ 'ignore' =&amp;gt; 404 ]]);
}

 /**
 * 创建索引
 * @author: zzhpeng
 * Date: 2019/9/5
 * @param string $index
 * @param array  $param
 *
 * @return mixed
 */
public static function setIndex(string $index, array $param = []){
    $client = self::getClient();
    if(empty($param)){
        $params = [
            //索引名
            'index' =&amp;gt; $index,
            'body' =&amp;gt; [
                'settings' =&amp;gt; [
                //一般以（节点数*1.5或3倍）来计算，比如有4个节点，分片数量一般是6个到12个，每个分片一般分配一个副本
                    'number_of_shards' =&amp;gt; 1,
                    'number_of_replicas' =&amp;gt; 1
                ],
                //mappings是定义字段和类型的。
                'mappings' =&amp;gt; [
                    //文档的源数据
                    '_source' =&amp;gt; [
                        'enabled' =&amp;gt; true
                    ],
                    //设置属性类型
                    'properties' =&amp;gt; [
                        'name' =&amp;gt; [
                            'type' =&amp;gt; 'text',
                        ],
                        'search_name' =&amp;gt; [
                            //type：类型，可以是text、long、short、date、integer、object等
                            'type' =&amp;gt; 'text',
                            //analyzer：分词器，这里的ik_max_word即使用ik分词器
                            'analyzer' =&amp;gt; 'ik_max_word',
                            'search_analyzer' =&amp;gt; 'ik_smart',
                        ],
                        'goods_detail_id' =&amp;gt; [
                            'type' =&amp;gt; 'integer'
                        ],
                        'classify_type_id' =&amp;gt; [
                            'type' =&amp;gt; 'integer'
                        ],
                        'store_id' =&amp;gt; [
                            'type' =&amp;gt; 'integer'
                        ]
                    ]
                ]
            ]
        ];
    }
    $response = $client-&amp;gt;indices()-&amp;gt;create($params);
    return $response;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;删除索引（index)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * 删除索引
 * @author: zzhpeng
 * Date: 2019/9/5
 * @param string $index
 *
 * @return mixed
 */
public static function deleteIndex(string $index){
    $client = self::getClient();
    $params = ['index' =&amp;gt; $index];
    self::addCommonParams($params);
    $response = $client-&amp;gt;indices()-&amp;gt;delete($params);
    return $response;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;查看索引（index)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * 查询索引
 * @author: zzhpeng
 * Date: 2019/9/5
 * @param string $index
 *
 * @return mixed
 */
static function getIndex(string $index){
    // Get mappings for all indexes
    $client = self::getClient();

    $params = ['index' =&amp;gt; $index];
    $response = $client-&amp;gt;indices()-&amp;gt;getMapping($params);
    return $response;
// Get mappings in 'my_index'
    $params = ['index' =&amp;gt; 'my_index'];
    $response = $client-&amp;gt;indices()-&amp;gt;getMapping($params);
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;创建文档（document）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * 建立文档
 * @author: zzhpeng
 * Date: 2019/9/5
 * @param string $index
 * @param array  $documents
 *
 * @return bool
 */
static function setDocoments(string $index,array $documents){
    
    // Get mappings for all indexes
    $client = self::getClient();

    //二位数组 $documents
    foreach ($documents as $key =&amp;gt; $document){
        $params = [
            'index' =&amp;gt; $index,
//                'id'    =&amp;gt; $key,
            'body'  =&amp;gt; $document

        ];
        
        $client-&amp;gt;index($params);
        unset($params);
    }
    return true;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;删除文档（document）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
/**
 * 获取文档
 * @author: zzhpeng
 * Date: 2019/9/5
 * @param $index
 * @param $id
 *
 * @return mixed
 */
static function deleteDocuments($index,$id){
    $client = self::getClient();
    $params = [
        'index' =&amp;gt; $index,
        'id'    =&amp;gt; $id
    ];

// Delete doc at /my_index/_doc_/my_id
    return $client-&amp;gt;delete($params);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;搜索文档（document）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;match是经过analyer的，也就是说，文档首先被分析器给处理了。根据不同的分析器，分析的结果也稍显不同，然后再根据分词结果进行匹配。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;term则不经过分词，它是直接去倒排索引中查找了精确的值了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$body = [
    'query' =&amp;gt; [
        'bool' =&amp;gt; [
            'must' =&amp;gt; [
                [ 'match' =&amp;gt; [ 'search_name' =&amp;gt; $key ] ],
                [ 'bool'=&amp;gt;
                    ['should' =&amp;gt; [
                        [ 'match' =&amp;gt; [ 'store_id' =&amp;gt; 681 ] ],
                        [ 'match' =&amp;gt; [ 'store_id' =&amp;gt; 0 ] ],
                    ]
                    ]
                ]
            ]
        ]
    ]
];


//搜索文档
static function searchDocuments($index,array $body){
    $client = self::getClient();

    $params = [
        'index' =&amp;gt; $index,
        'body'  =&amp;gt; $body
    ];

// Get doc at /my_index/_doc/my_id
    return $response = $client-&amp;gt;search($params);
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;

&lt;h3 id=&quot;查看-elasticsearch-使用情况&quot;&gt;查看 elasticsearch 使用情况&lt;/h3&gt;
&lt;p&gt;curl -X GET “http://192.168.199.254:9200/_cat/indices?v”
&lt;img src=&quot;http://img.zzhpeng.cn/Fo3ZNz38wF3ij-z9_kAZ0RAAwCzJ&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;磁盘容量超过90会不给链接操作&quot;&gt;磁盘容量超过90%会不给链接操作&lt;/h3&gt;
&lt;p&gt;报错信息&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;low disk watermark [85%] exceeded on …，replicas will not be assigned to this node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;高频写入down机&quot;&gt;高频写入down机&lt;/h3&gt;
&lt;p&gt;待。。。&lt;/p&gt;

&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;

&lt;p&gt;1、&lt;a href=&quot;https://blog.csdn.net/weixin_33692284/article/details/92170069&quot;&gt;图解Elasticsearch中的_source、_all、store和index属性 - weixin_33692284的博客 - CSDN博客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/client/php-api/current/overview.html&quot;&gt;官方说明文档：&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;https://github.com/elastic/elasticsearch-php&quot;&gt;官方开发的php客户端组件:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4、&lt;a href=&quot;https://www.jianshu.com/p/88f0546d5955&quot;&gt;Elasticsearch7.*版本 1.入门 - 简书&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5、&lt;a href=&quot;https://www.cnblogs.com/zlslch/p/6419948.html&quot;&gt;elasticsearch-.yml（中文配置详解） - 大数据和AI躺过的坑 - 博客园&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Mon, 02 Sep 2019 00:00:00 +0800</pubDate>
				<link>/elasticsearch-learning.html</link>
				<guid isPermaLink="true">/elasticsearch-learning.html</guid>
			</item>
		
			<item>
				<title>基于frp,gitlab的docker镜像实现本地gitlab外网访问(一)</title>
				<description>&lt;h3 id=&quot;基础&quot;&gt;基础&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;会git的基本操作&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;会docker和docker-compose的基本操作&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;基于gitlab的docker镜像安装内网git仓库&quot;&gt;基于gitlab的docker镜像安装内网git仓库&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;1、这里docker-compose管理安装&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.zzhpeng.cn/FgO-PtshY7SQ52npAmUL4en4WGCO&quot; alt=&quot;FgO-PtshY7SQ52npAmUL4en4WGCO&quot; /&gt;
然后在当前目录运行docker-compose up,执行时间可能会有点久，请耐性等待。
当执行到开始写日志的时候，就证明本地的gitlab安装成功了。如下图：
&lt;img src=&quot;http://img.zzhpeng.cn/FrMofWRxKkWDy7Nn2Lb4JwjAesJz&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2、访问127.0.0.1:8686测试&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;内网穿透frp&quot;&gt;内网穿透frp&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;1、在frp的release找到相应系统的压缩包，里面包含服务端frps和客户端frpc&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mac系统下载frp_0.27.1_darwin_amd64.tar.gz&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;linux系统下载frp_0.27.1_linux_amd64.tar.gz&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;2、下载包&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;我在内网用的是mac测试，所以用了frp_0.27.1_darwin_amd64.tar.gz这个包，
外网用linux的frp_0.27.1_linux_amd64.tar.gz。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;3、配置&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;本地客户端frpc配置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[common]
server_addr = *.*.*.* #填写自己的外网服务器的ip
server_port = 7000

[web] 
type = http
local_port = 8686
custom_domains = gitlab.zzhpeng.cn                               

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;外网frps配置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[common]
bind_port = 7000
vhost_http_port = 8080
subdomain_host = gitlab.zzhpeng.cn                            

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;4、启动&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;client端启动&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./frpc -c ./frpc.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;server端启动&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./frps -c ./frps.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;外网域名配置与测试&quot;&gt;外网域名配置与测试&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;1、做域名解析，腾讯云云服务器如下配置&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.zzhpeng.cn/Fpud9LMVf-xDNvznnHnfWusl8N7W&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2、域名http://gitlab.zzhpeng.cn:8080访问测试&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://img.zzhpeng.cn/FuPWVEIWOixgp6wM2vmBfP84_emk&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;外网域名访问优化nginx转发&quot;&gt;外网域名访问优化–nginx转发&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
server{
    listen 80;
    server_name  gitlab.zzhpeng.cn;
    root /var/www/html/goShares/public; # 该项要修改为你准备存放相关网页的路径

    #access_log /dev/null;
    #access_log  /var/log/nginx/nginx.localhost.access.log  main;
    error_log  /var/log/nginx/wx.zzhpeng.cn.log  warn;

    location / {
        #resolver 127.0.0.1; #通过配置/etc/dnsmasq.conf，本地解析域名
        proxy_ssl_server_name on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_pass http://gitlab.zzhpeng.cn:8080; #通过域名访问frp服务
    }

    location = /favicon.ico {
         log_not_found off;
         access_log off;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果图如下：
&lt;img src=&quot;http://img.zzhpeng.cn/FiasTv3nEaiDaxUK_PcotivGkE9F&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;其他优化qa&quot;&gt;其他优化Q&amp;amp;A&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Q:本地服务器是宝塔搭建的，已经有nginx环境。不用gitlab的docker镜像安装，用一键安装方法，又会帮你弄一个nginx环境，起冲突。该怎么办？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A:一键安装可以选择是否安装nginx，然后参考gitlab的nginx的转发。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Q:本地开发与公司内部git仓库交流不用翻到外网再到公司内网，直接与内网地址连接，怎么做？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A:上面本地docker-compose搭建的环境，将映射出去的8686端口改为80，映射出来的config配置文件下有gitlab.rb，修改如下配置项并改公司路由器的host：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # For HTTP
 external_url &quot;http://gitlab.example.com:8929&quot;

 or

 # For HTTPS (notice the https)
 external_url &quot;https://gitlab.example.com:8929&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Q:不用gitlab自带的nginx转发，用宝塔的nginx转发报502。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;https://stackoverflow.com/questions/35327882/what-permissions-does-nginx-need-for-the-gitlab-workhorse-socket&lt;/p&gt;

&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1、&lt;a href=&quot;https://github.com/fatedier/frp&quot;&gt;frp的github仓库&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2、&lt;a href=&quot;https://github.com/gitlabhq/gitlabhq&quot;&gt;gitlab的github仓库&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3、&lt;a href=&quot;https://docs.gitlab.com/omnibus/docker/&quot;&gt;gitlab的docker安装指导文档&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Mon, 15 Jul 2019 00:00:00 +0800</pubDate>
				<link>/location-gitlab-outside-visit.html</link>
				<guid isPermaLink="true">/location-gitlab-outside-visit.html</guid>
			</item>
		
			<item>
				<title>基于slim框架搭建Oauth2</title>
				<description>&lt;h3 id=&quot;官方文档和官方源&quot;&gt;官方文档和官方源&lt;/h3&gt;
&lt;p&gt;Oauth2源：https://github.com/thephpleague/oauth2-server&lt;/p&gt;

&lt;p&gt;Slim源：https://github.com/slimphp/Slim&lt;/p&gt;

&lt;h3 id=&quot;待更新&quot;&gt;待更新&lt;/h3&gt;

</description>
				<pubDate>Mon, 03 Jun 2019 00:00:00 +0800</pubDate>
				<link>/oauth2-slim.html</link>
				<guid isPermaLink="true">/oauth2-slim.html</guid>
			</item>
		
	</channel>
</rss>
